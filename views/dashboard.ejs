<!DOCTYPE html>
<html>
<head>
    <title>Dibs</title>
    <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css">
    <style>
        body        { padding-top:80px; word-wrap:break-word; }
    </style>
    
    <!-- Import JS files -->
    <script src="https://code.jquery.com/jquery-1.11.1.min.js"></script>
    <script src="/javascripts/index.js"></script>
    <script src="/javascripts/events.js"></script>
    <script src="/javascripts/messages.js"></script>
    <script src="/javascripts/orders.js"></script>
    <script src="/javascripts/queues.js"></script> 

    <!--This script here is sourced from this stackoverflow post (second answer): http://stackoverflow.com/questions/7131909/facebook-callback-appends-to-return-url
    It's a workaround to a Facebook API bug-->
<script type="text/javascript">
    // Test for the ugliness.
	if (window.location.hash == '#_=_'){

    // Check if the browser supports history.replaceState.
    if (history.replaceState) {

        // Keep the exact URL up to the hash.
        var cleanHref = window.location.href.split('#')[0];

        // Replace the URL in the address bar without messing with the back button.
        history.replaceState(null, null, cleanHref);

    } else {

        // Well, you're on an old browser, we can get rid of the _=_ but not the #.
        window.location.hash = '';

    }

	}
</script>
</head>
<body>
<script>
    // TESTING FACEBOOK API USAGE
  // This is called with the results from from FB.getLoginStatus().
  function statusChangeCallback(response) {
    // The response object is returned with a status field that lets the
    // app know the current login status of the person.
    // Full docs on the response object can be found in the documentation
    // for FB.getLoginStatus().
    if (response.status === 'connected') {
      // Logged into your app and Facebook.
      afterSuccessfulLogin();
    } else if (response.status === 'not_authorized') {
      // The person is logged into Facebook, but not your app.
      document.getElementById('main-content').innerHTML = 'There seems to have been an error. Please logout and try again.';
    } else {
      // The person is not logged into Facebook, so we're not sure if
      // they are logged into this app or not.
      document.getElementById('main-content').innerHTML = 'There seems to have been an error. Please logout and try again.';
    }
  }

  // This function is called when someone finishes with the Login
  // Button.  See the onlogin handler attached to it in the sample
  // code below.
  function checkLoginState() {
    FB.getLoginStatus(function(response) {
      statusChangeCallback(response);
    });
  }

  window.fbAsyncInit = function() {
  FB.init({
    appId      : '1001497043231909',
    cookie     : true,  // enable cookies to allow the server to access 
                        // the session
    xfbml      : false,  // parse social plugins on this page
    version    : 'v2.2' // use version 2.2
  });

  // Now that we've initialized the JavaScript SDK, we call 
  // FB.getLoginStatus().  This function gets the state of the
  // person visiting this page and can return one of three states to
  // the callback you provide.  They can be:
  //
  // 1. Logged into your app ('connected')
  // 2. Logged into Facebook, but not your app ('not_authorized')
  // 3. Not logged into Facebook and can't tell if they are logged into
  //    your app or not.
  //
  // These three cases are handled in the callback function.

  FB.getLoginStatus(function(response) {
    statusChangeCallback(response);
  });

  };

  // Load the SDK asynchronously
  (function(d, s, id) {
    var js, fjs = d.getElementsByTagName(s)[0];
    if (d.getElementById(id)) return;
    js = d.createElement(s); js.id = id;
    js.src = "//connect.facebook.net/en_US/sdk.js";
    fjs.parentNode.insertBefore(js, fjs);
  }(document, 'script', 'facebook-jssdk'));

  // This is called after the login is validated; check statusChangeCallback() to see when this is called
  function afterSuccessfulLogin() {
    // load our initial dashboard
    loadDashboard();
  }
</script>

<div class="container">

    <div class="page-header text-center">
        <h1><span class="fa fa-glass"></span> Dibs Dashboard</h1>
        <a href="/logout" class="btn btn-default btn-sm">Logout</a>
    </div>

    <div class="row">

        <!-- FACEBOOK INFORMATION -->
         <div class="col-sm-6">
            <div class="well">
                <h3 class="text-primary"><span class="fa fa-facebook"></span> Facebook</h3>

                    <p>
                        <strong>id</strong>: <%= user._id %><br>
                        <strong>token</strong>: <%= user.token %><br>
                        <strong>name</strong>: <%= user.username %>
                    </p>

            </div>
        </div>

    </div>

    <div id="main-content"></div>

</div>
</body>
</html>
